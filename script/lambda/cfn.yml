Description: >
  Builds REX pages and saves to s3 

Parameters:

  BucketName:
    Type: String
  BucketRegion:
    Type: String
  
  PublicUrl:
    Type: String
  CodeVersion:
    Type: String
  ReleaseId:
    Type: String
  
  LambdaContainerImage:
    Type: String

Resources:
  TaskQueue: 
    Type: AWS::SQS::Queue
    Properties: 
      VisibilityTimeout: 60
      RedrivePolicy: 
        deadLetterTargetArn: !Sub ${DeadLetterQueue.Arn}
        maxReceiveCount: 10
  DeadLetterQueue: 
    Type: AWS::SQS::Queue
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: logs
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
            - logs:*
            Resource: arn:aws:logs:*:*:*
      - PolicyName: write
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
            - s3:Put*
            - s3:ListBucket
            Resource:
            - !Sub arn:aws:s3:::${BucketName}
            - !Sub arn:aws:s3:::${BucketName}/*
      - PolicyName: queue 
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
            - sqs:GetQueueAttributes
            - sqs:DeleteMessage
            - sqs:ReceiveMessage
            Resource:
              Fn::GetAtt: 'TaskQueue.Arn'
      - PolicyName: ecr 
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
            - ecr:GetDownloadUrlForLayer
            - ecr:BatchGetImage
            Resource: 
              Fn::ImportValue: RexECRRepository  
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      PackageType: Image
      Code: 
        ImageUri: !Sub ${LambdaContainerImage}
      ImageConfig:
        Command:
        - entry.render_book_page_to_s3
      Timeout: 60
      MemorySize: 5120
      Role:
        Fn::GetAtt: 'LambdaRole.Arn'
      Tags:
      - Key: "Team"
        Value: "Unified"
      - Key: "Project"
        Value: "Rex"
      Environment:
        Variables:
          BABEL_CACHE_PATH: /tmp/babel-cache.json
          REACT_APP_CODE_VERSION: !Ref CodeVersion
          REACT_APP_RELEASE_ID: !Ref ReleaseId 
          REACT_APP_ENV: production
          PUBLIC_URL: !Ref PublicUrl 
          BUCKET_REGION: !Ref BucketRegion 
          BUCKET_NAME: !Ref BucketName
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${LambdaFunction}'
      RetentionInDays: 14
  SQSTrigger:
    Type: AWS::Lambda::EventSourceMapping
    DependsOn:
      - LogGroup
    Properties:
      BatchSize: 5 
      Enabled: true
      EventSourceArn:
        Fn::GetAtt: 'TaskQueue.Arn'
      FunctionName: !Ref LambdaFunction

Outputs:
  Queue:
    Description: The input repo 
    Value: !Ref TaskQueue 
