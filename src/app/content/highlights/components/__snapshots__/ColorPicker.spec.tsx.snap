// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ColorPicker matches snapshot no selection 1`] = `
.c4 {
  display: inline-block;
  vertical-align: -.125em;
  overflow: hidden;
}

.c6 {
  display: none;
}

.c8 {
  display: none;
  position: absolute;
  height: 2.8rem;
  width: 2.8rem;
  background-color: transparent;
  z-index: -1;
  left: 50%;
  top: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  border-radius: 50%;
}

.c9 {
  height: 2.1999999999999997rem;
  width: 2.1999999999999997rem;
  background-color: transparent;
  position: absolute;
  left: 50%;
  top: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  border-radius: 50%;
  border: 1px solid #fed200;
}

.c11 {
  height: 2.1999999999999997rem;
  width: 2.1999999999999997rem;
  background-color: transparent;
  position: absolute;
  left: 50%;
  top: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  border-radius: 50%;
  border: 1px solid #92d101;
}

.c13 {
  height: 2.1999999999999997rem;
  width: 2.1999999999999997rem;
  background-color: transparent;
  position: absolute;
  left: 50%;
  top: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  border-radius: 50%;
  border: 1px solid #00c3ed;
}

.c15 {
  height: 2.1999999999999997rem;
  width: 2.1999999999999997rem;
  background-color: transparent;
  position: absolute;
  left: 50%;
  top: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  border-radius: 50%;
  border: 1px solid #545ec8;
}

.c17 {
  height: 2.1999999999999997rem;
  width: 2.1999999999999997rem;
  background-color: transparent;
  position: absolute;
  left: 50%;
  top: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  border-radius: 50%;
  border: 1px solid #de017e;
}

.c2 {
  position: relative;
  background-color: #ffff8a;
  border: 1px solid #8f7700;
  height: 2.4rem;
  width: 2.4rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: 2rem;
  overflow: visible;
}

.c2 .c5 {
  height: 1.6rem;
  width: 1.6rem;
}

.c2 input:focus + .c7 {
  display: block;
  outline: 0.2rem auto Highlight;
  outline: 0.2rem auto -webkit-focus-ring-color;
  z-index: 1;
}

.c10 {
  position: relative;
  background-color: #def99f;
  border: 1px solid #4e6f01;
  height: 2.4rem;
  width: 2.4rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: 2rem;
  overflow: visible;
}

.c10 .c5 {
  height: 1.6rem;
  width: 1.6rem;
}

.c10 input:focus + .c7 {
  display: block;
  outline: 0.2rem auto Highlight;
  outline: 0.2rem auto -webkit-focus-ring-color;
  z-index: 1;
}

.c12 {
  position: relative;
  background-color: #c8f5ff;
  border: 1px solid #006880;
  height: 2.4rem;
  width: 2.4rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: 2rem;
  overflow: visible;
}

.c12 .c5 {
  height: 1.6rem;
  width: 1.6rem;
}

.c12 input:focus + .c7 {
  display: block;
  outline: 0.2rem auto Highlight;
  outline: 0.2rem auto -webkit-focus-ring-color;
  z-index: 1;
}

.c14 {
  position: relative;
  background-color: #cbcfff;
  border: 1px solid #141a3e;
  height: 2.4rem;
  width: 2.4rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: 2rem;
  overflow: visible;
}

.c14 .c5 {
  height: 1.6rem;
  width: 1.6rem;
}

.c14 input:focus + .c7 {
  display: block;
  outline: 0.2rem auto Highlight;
  outline: 0.2rem auto -webkit-focus-ring-color;
  z-index: 1;
}

.c16 {
  position: relative;
  background-color: #ffc5e1;
  border: 1px solid #560131;
  height: 2.4rem;
  width: 2.4rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: 2rem;
  overflow: visible;
}

.c16 .c5 {
  height: 1.6rem;
  width: 1.6rem;
}

.c16 input:focus + .c7 {
  display: block;
  outline: 0.2rem auto Highlight;
  outline: 0.2rem auto -webkit-focus-ring-color;
  z-index: 1;
}

.c18 img {
  height: 1.9rem;
  width: 1.9rem;
}

.c3 {
  cursor: pointer;
  margin: 0;
}

.c3 input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.c0 {
  border: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c0 legend {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  -webkit-clip: rect(0,0,0,0);
  clip: rect(0,0,0,0);
  white-space: nowrap;
  border: 0;
}

.c1 {
  border: 0;
  outline: none;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  overflow: visible;
  gap: 0.8rem;
  padding: 0 0.3rem 0.8rem;
}

<div
  className="c0"
>
  <fieldset
    className="c1"
    data-testid="highlight-colours-picker"
    onFocus={[Function]}
    onKeyDown={[Function]}
    role="radiogroup"
    tabIndex={0}
  >
    <legend>
      Choose highlight color
    </legend>
    <label
      aria-label="Apply yellow highlight"
      checked={false}
      className="c2 c3"
      component={<label />}
      style={
        Object {
          "focusBorder": "#8f7700",
          "focused": "#fed200",
          "label": "yellow",
          "passive": "#ffff8a",
        }
      }
      title="yellow"
    >
      <svg
        aria-hidden="true"
        className="c4 c5 c6"
        fill="currentColor"
        focusable="false"
        viewBox="0 0 512 512"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"
          fill="currentColor"
        />
      </svg>
      <input
        aria-checked={false}
        checked={false}
        name="yellow"
        onChange={[Function]}
        tabIndex={-1}
        type="radio"
      />
      <span
        className="c7 c8"
        style={
          Object {
            "focusBorder": "#8f7700",
            "focused": "#fed200",
            "label": "yellow",
            "passive": "#ffff8a",
          }
        }
      />
      <span
        className="c9"
        style={
          Object {
            "focusBorder": "#8f7700",
            "focused": "#fed200",
            "label": "yellow",
            "passive": "#ffff8a",
          }
        }
      />
    </label>
    <label
      aria-label="Apply green highlight"
      checked={false}
      className="c10 c3"
      component={<label />}
      style={
        Object {
          "focusBorder": "#4e6f01",
          "focused": "#92d101",
          "label": "green",
          "passive": "#def99f",
        }
      }
      title="green"
    >
      <svg
        aria-hidden="true"
        className="c4 c5 c6"
        fill="currentColor"
        focusable="false"
        viewBox="0 0 512 512"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"
          fill="currentColor"
        />
      </svg>
      <input
        aria-checked={false}
        checked={false}
        name="green"
        onChange={[Function]}
        tabIndex={-1}
        type="radio"
      />
      <span
        className="c7 c8"
        style={
          Object {
            "focusBorder": "#4e6f01",
            "focused": "#92d101",
            "label": "green",
            "passive": "#def99f",
          }
        }
      />
      <span
        className="c11"
        style={
          Object {
            "focusBorder": "#4e6f01",
            "focused": "#92d101",
            "label": "green",
            "passive": "#def99f",
          }
        }
      />
    </label>
    <label
      aria-label="Apply blue highlight"
      checked={false}
      className="c12 c3"
      component={<label />}
      style={
        Object {
          "focusBorder": "#006880",
          "focused": "#00c3ed",
          "label": "blue",
          "passive": "#c8f5ff",
        }
      }
      title="blue"
    >
      <svg
        aria-hidden="true"
        className="c4 c5 c6"
        fill="currentColor"
        focusable="false"
        viewBox="0 0 512 512"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"
          fill="currentColor"
        />
      </svg>
      <input
        aria-checked={false}
        checked={false}
        name="blue"
        onChange={[Function]}
        tabIndex={-1}
        type="radio"
      />
      <span
        className="c7 c8"
        style={
          Object {
            "focusBorder": "#006880",
            "focused": "#00c3ed",
            "label": "blue",
            "passive": "#c8f5ff",
          }
        }
      />
      <span
        className="c13"
        style={
          Object {
            "focusBorder": "#006880",
            "focused": "#00c3ed",
            "label": "blue",
            "passive": "#c8f5ff",
          }
        }
      />
    </label>
    <label
      aria-label="Apply purple highlight"
      checked={false}
      className="c14 c3"
      component={<label />}
      style={
        Object {
          "focusBorder": "#141a3e",
          "focused": "#545ec8",
          "label": "purple",
          "passive": "#cbcfff",
        }
      }
      title="purple"
    >
      <svg
        aria-hidden="true"
        className="c4 c5 c6"
        fill="currentColor"
        focusable="false"
        viewBox="0 0 512 512"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"
          fill="currentColor"
        />
      </svg>
      <input
        aria-checked={false}
        checked={false}
        name="purple"
        onChange={[Function]}
        tabIndex={-1}
        type="radio"
      />
      <span
        className="c7 c8"
        style={
          Object {
            "focusBorder": "#141a3e",
            "focused": "#545ec8",
            "label": "purple",
            "passive": "#cbcfff",
          }
        }
      />
      <span
        className="c15"
        style={
          Object {
            "focusBorder": "#141a3e",
            "focused": "#545ec8",
            "label": "purple",
            "passive": "#cbcfff",
          }
        }
      />
    </label>
    <label
      aria-label="Apply pink highlight"
      checked={false}
      className="c16 c3"
      component={<label />}
      style={
        Object {
          "focusBorder": "#560131",
          "focused": "#de017e",
          "label": "pink",
          "passive": "#ffc5e1",
        }
      }
      title="pink"
    >
      <svg
        aria-hidden="true"
        className="c4 c5 c6"
        fill="currentColor"
        focusable="false"
        viewBox="0 0 512 512"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"
          fill="currentColor"
        />
      </svg>
      <input
        aria-checked={false}
        checked={false}
        name="pink"
        onChange={[Function]}
        tabIndex={-1}
        type="radio"
      />
      <span
        className="c7 c8"
        style={
          Object {
            "focusBorder": "#560131",
            "focused": "#de017e",
            "label": "pink",
            "passive": "#ffc5e1",
          }
        }
      />
      <span
        className="c17"
        style={
          Object {
            "focusBorder": "#560131",
            "focused": "#de017e",
            "label": "pink",
            "passive": "#ffc5e1",
          }
        }
      />
    </label>
  </fieldset>
  <button
    aria-label="Deselect current highlight color"
    className="c18"
    onClick={[MockFunction]}
    type="button"
  >
    <img
      alt=""
      src="trash-347.svg"
    />
  </button>
</div>
`;
