// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Card matches snapshot when focused without note 1`] = `
.c0 {
  visibility: hidden;
  -webkit-animation: 600ms bcCCNc ease-out;
  animation: 600ms bcCCNc ease-out;
  display: block;
  position: absolute;
  padding: 0.8rem;
  border-radius: 0.4rem;
  box-shadow: 0 0 2px 0 rgba(0,0,0,0.14),0 2px 2px 0 rgba(0,0,0,0.12),0 1px 3px 0 rgba(0,0,0,0.2);
  left: unset;
  right: 0;
  top: 150px;
  left: calc(50% + (82.5rem / 2) + 1rem);
  right: unset;
  -webkit-transition: opacity 0.3s,top 0.3s,left 0.3s;
  transition: opacity 0.3s,top 0.3s,left 0.3s;
}

.c0 .c1 {
  z-index: 1;
}

.c0::before {
  content: ' ';
  border-radius: 0.4rem 0 0 0.4rem;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  width: 0.4rem;
  background-color: #fed200;
}

@media print {
  .c0 {
    display: none;
  }
}

@media (max-width:106.25em) {
  .c0 {
    -webkit-animation: none;
    animation: none;
    left: unset;
    right: 2rem;
    top: 0px;
  }
}

@media (max-width:82.8125em) {
  .c0 {
    -webkit-animation: none;
    animation: none;
    left: unset;
    right: 2rem;
    top: 0px;
  }
}

<div
  data-testid="card"
  onClick={[Function]}
>
  <div
    className="c0"
    data={
      Object {
        "color": "yellow",
        "id": "asdf",
      }
    }
    hasUnsavedHighlight={false}
    highlight={
      Object {
        "addFocusedStyles": [MockFunction],
        "elements": Array [
          <span />,
        ],
        "focus": [MockFunction],
        "getStyle": [MockFunction],
        "id": "asdf",
        "isAttached": [MockFunction],
        "range": Object {
          "commonAncestorContainer": null,
          "getBoundingClientRect": [MockFunction] {
            "calls": Array [
              Array [],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": Object {
                  "bottom": 200,
                  "top": 100,
                },
              },
            ],
          },
        },
        "serialize": [Function],
        "setStyle": [MockFunction],
        "sourceId": "testbook1-testpage1-uuid",
      }
    }
    isActive={true}
    locationFilterId="testbook1-testpage1-uuid"
    mock-edit={true}
    onBlur={[Function]}
    onCancel={[Function]}
    onCreate={[Function]}
    onHeightChange={[Function]}
    onRemove={[Function]}
    pageId="testbook1-testpage1-uuid"
    setAnnotationChangesPending={[Function]}
  />
</div>
`;

exports[`Card matches snapshot when passed data without note 1`] = `
.c0 {
  visibility: hidden;
  -webkit-animation: 600ms bcCCNc ease-out;
  animation: 600ms bcCCNc ease-out;
  display: block;
  position: absolute;
  padding: 0.8rem;
  border-radius: 0.4rem;
  box-shadow: 0 0 2px 0 rgba(0,0,0,0.14),0 2px 2px 0 rgba(0,0,0,0.12),0 1px 3px 0 rgba(0,0,0,0.2);
  left: unset;
  right: 0;
  top: undefinedpx;
  left: calc(50% + (82.5rem / 2) + 1rem);
  right: unset;
  -webkit-transition: opacity 0.3s,top 0.3s,left 0.3s;
  transition: opacity 0.3s,top 0.3s,left 0.3s;
}

.c0 .c1 {
  z-index: 1;
}

@media print {
  .c0 {
    display: none;
  }
}

@media (max-width:106.25em) {
  .c0 {
    -webkit-animation: none;
    animation: none;
    left: unset;
    right: 2rem;
    top: 0px;
  }
}

@media (max-width:82.8125em) {
  .c0 {
    -webkit-animation: none;
    animation: none;
    left: unset;
    right: 2rem;
    top: 0px;
  }
}

<div
  data-testid="card"
  onClick={[Function]}
>
  <div
    className="c0"
    data={
      Object {
        "id": "asdf",
      }
    }
    hasUnsavedHighlight={false}
    highlight={
      Object {
        "addFocusedStyles": [MockFunction],
        "elements": Array [
          <span />,
        ],
        "focus": [MockFunction],
        "getStyle": [MockFunction],
        "id": "asdf",
        "isAttached": [MockFunction],
        "range": Object {
          "commonAncestorContainer": null,
          "getBoundingClientRect": [MockFunction],
        },
        "serialize": [Function],
        "setStyle": [MockFunction],
        "sourceId": "testbook1-testpage1-uuid",
      }
    }
    isActive={true}
    locationFilterId="testbook1-testpage1-uuid"
    mock-edit={true}
    onBlur={[Function]}
    onCancel={[Function]}
    onCreate={[Function]}
    onHeightChange={[Function]}
    onRemove={[Function]}
    pageId="testbook1-testpage1-uuid"
    setAnnotationChangesPending={[Function]}
  />
</div>
`;

exports[`Card matches snapshot without data 1`] = `
.c0 {
  visibility: hidden;
  -webkit-animation: 600ms bcCCNc ease-out;
  animation: 600ms bcCCNc ease-out;
  display: block;
  position: absolute;
  padding: 0.8rem;
  border-radius: 0.4rem;
  box-shadow: 0 0 2px 0 rgba(0,0,0,0.14),0 2px 2px 0 rgba(0,0,0,0.12),0 1px 3px 0 rgba(0,0,0,0.2);
  left: unset;
  right: 0;
  top: 200px;
  left: calc(50% + (82.5rem / 2) + 1rem);
  right: unset;
  -webkit-transition: opacity 0.3s,top 0.3s,left 0.3s;
  transition: opacity 0.3s,top 0.3s,left 0.3s;
}

.c0 .c1 {
  z-index: 1;
}

@media print {
  .c0 {
    display: none;
  }
}

@media (max-width:106.25em) {
  .c0 {
    -webkit-animation: none;
    animation: none;
    left: unset;
    right: 2rem;
    top: 200px;
  }
}

@media (max-width:82.8125em) {
  .c0 {
    -webkit-animation: none;
    animation: none;
    left: unset;
    right: 2rem;
    top: 200px;
  }
}

<div
  data-testid="card"
  onClick={[Function]}
>
  <div
    className="c0"
    hasUnsavedHighlight={false}
    highlight={
      Object {
        "addFocusedStyles": [MockFunction],
        "elements": Array [
          <span />,
        ],
        "focus": [MockFunction],
        "getStyle": [MockFunction],
        "id": "asdf",
        "isAttached": [MockFunction],
        "range": Object {
          "commonAncestorContainer": null,
          "getBoundingClientRect": [MockFunction] {
            "calls": Array [
              Array [],
              Array [],
              Array [],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": Object {
                  "bottom": 200,
                  "top": 100,
                },
              },
              Object {
                "type": "return",
                "value": Object {
                  "bottom": 200,
                  "top": 100,
                },
              },
              Object {
                "type": "return",
                "value": Object {
                  "bottom": 200,
                  "top": 100,
                },
              },
            ],
          },
        },
        "serialize": [Function],
        "setStyle": [MockFunction],
        "sourceId": "testbook1-testpage1-uuid",
      }
    }
    isActive={true}
    locationFilterId="testbook1-testpage1-uuid"
    mock-edit={true}
    onBlur={[Function]}
    onCancel={[Function]}
    onCreate={[Function]}
    onHeightChange={[Function]}
    onRemove={[Function]}
    pageId="testbook1-testpage1-uuid"
    setAnnotationChangesPending={[Function]}
  />
</div>
`;
