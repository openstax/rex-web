// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Card matches snapshot when focused without note 1`] = `
<div
  data-testid="card"
  onClick={[Function]}
>
  <div
    className="sc-bdVaJa hhNicC"
    data={
      Object {
        "color": "yellow",
        "id": "asdf",
      }
    }
    hasUnsavedHighlight={false}
    highlight={
      Object {
        "addFocusedStyles": [MockFunction],
        "elements": Array [
          <span />,
        ],
        "focus": [MockFunction],
        "getStyle": [MockFunction],
        "id": "asdf",
        "isAttached": [MockFunction],
        "range": Object {
          "commonAncestorContainer": null,
          "getBoundingClientRect": [MockFunction] {
            "calls": Array [
              Array [],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": Object {
                  "bottom": 200,
                  "top": 100,
                },
              },
            ],
          },
        },
        "serialize": [Function],
        "setStyle": [MockFunction],
        "sourceId": "testbook1-testpage1-uuid",
      }
    }
    isActive={true}
    locationFilterId="testbook1-testpage1-uuid"
    mock-edit={true}
    onBlur={[Function]}
    onCancel={[Function]}
    onCreate={[Function]}
    onHeightChange={[Function]}
    onRemove={[Function]}
    pageId="testbook1-testpage1-uuid"
    setAnnotationChangesPending={[Function]}
  />
</div>
`;

exports[`Card matches snapshot when passed data without note 1`] = `
<div
  data-testid="card"
  onClick={[Function]}
>
  <div
    className="sc-bdVaJa iiOeCm"
    data={
      Object {
        "id": "asdf",
      }
    }
    hasUnsavedHighlight={false}
    highlight={
      Object {
        "addFocusedStyles": [MockFunction],
        "elements": Array [
          <span />,
        ],
        "focus": [MockFunction],
        "getStyle": [MockFunction],
        "id": "asdf",
        "isAttached": [MockFunction],
        "range": Object {
          "commonAncestorContainer": null,
          "getBoundingClientRect": [MockFunction],
        },
        "serialize": [Function],
        "setStyle": [MockFunction],
        "sourceId": "testbook1-testpage1-uuid",
      }
    }
    isActive={true}
    locationFilterId="testbook1-testpage1-uuid"
    mock-edit={true}
    onBlur={[Function]}
    onCancel={[Function]}
    onCreate={[Function]}
    onHeightChange={[Function]}
    onRemove={[Function]}
    pageId="testbook1-testpage1-uuid"
    setAnnotationChangesPending={[Function]}
  />
</div>
`;

exports[`Card matches snapshot without data 1`] = `
<div
  data-testid="card"
  onClick={[Function]}
>
  <div
    className="sc-bdVaJa jqlvoB"
    hasUnsavedHighlight={false}
    highlight={
      Object {
        "addFocusedStyles": [MockFunction],
        "elements": Array [
          <span />,
        ],
        "focus": [MockFunction],
        "getStyle": [MockFunction],
        "id": "asdf",
        "isAttached": [MockFunction],
        "range": Object {
          "commonAncestorContainer": null,
          "getBoundingClientRect": [MockFunction] {
            "calls": Array [
              Array [],
              Array [],
              Array [],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": Object {
                  "bottom": 200,
                  "top": 100,
                },
              },
              Object {
                "type": "return",
                "value": Object {
                  "bottom": 200,
                  "top": 100,
                },
              },
              Object {
                "type": "return",
                "value": Object {
                  "bottom": 200,
                  "top": 100,
                },
              },
            ],
          },
        },
        "serialize": [Function],
        "setStyle": [MockFunction],
        "sourceId": "testbook1-testpage1-uuid",
      }
    }
    isActive={true}
    locationFilterId="testbook1-testpage1-uuid"
    mock-edit={true}
    onBlur={[Function]}
    onCancel={[Function]}
    onCreate={[Function]}
    onHeightChange={[Function]}
    onRemove={[Function]}
    pageId="testbook1-testpage1-uuid"
    setAnnotationChangesPending={[Function]}
  />
</div>
`;
